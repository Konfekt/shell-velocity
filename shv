#!/usr/bin/env bash

set -e
shopt -s extglob
shopt -s globstar

: "${EDITOR:=nano}"
: "${SHV_PICKER:="fzf --print-query --bind=alt-enter:print-query"}"
: "${SHV_PATH:=$HOME/Documents/notes}"
: "${SHV_EXT:=md}"

# Echo to stderr
echoerr() { echo "$@" 1>&2; }

# Format string in a more usefull state
_format() {
    local str
    # Remove all leading white-space.
    # '${1%%[![:space:]]*}': Strip everything but leading white-space.
    # '${1#${XXX}}': Remove the white-space from the start of the string.
    str="${1#${1%%[![:space:]]*}}"
    # Remove all trailing white-space.
    # '${trim##*[![:space:]]}': Strip everything but trailing white-space.
    # '${trim%${XXX}}': Remove the white-space from the end of the string.
    str="${str%${str##*[![:space:]]}}"
    # Removes EOL characters
    str="${str%%\n}"
    # Substitute spaces with dashes
    str="${str//\ /-}"

    printf "%s" "$str"
}

# List files in SHV_PATH
_get_files() {
    find . \
        -type f \
        -name "*.$SHV_EXT" \
        -not -path "./.obsidian/*" \
        -not -path "./.git/*"
}

# List markdown tags in SHV_PATH
_get_tags() {
    # Does a recursive
    tags=$(_get_files | xargs -I {} grep -o -E "#[a-z0-9_]+" {} | sort -u)
    [[ -n $tags ]] && printf "%s\n" "$tags"
}

# Handler to select and edit day specific note
# $1: subcommands
select_date() {
    mkdir -p ./diary >/dev/null
    cd diary
    case "$1" in
        today | t)
            : "$(date +'%Y-%m-%d')".md
            ;;
        tomorow | tom | tm)
            : "$(date --date="tomorrow" +"%Y-%m-%d")".md
            ;;
        yesterday | ye)
            : "$(date --date="yesterday" +"%Y-%m-%d")".md
            ;;
        *)
            echoerr "\"$1\" is not an legal option"
            exit 0
            ;;
    esac
    edit_note "$_" ""
}

# Handler to select a markdown tag
select_tag() {
    local sel
    sel=$(_get_tags | $SHV_PICKER)
    sel=$(_format "$sel")
    printf "%s" "$sel"
}

# Handler to search/create note
# $1: Additional query to filter note search
select_note() {
    if [[ -z $1 ]]; then
        sel=$(_get_files | xargs -I {} grep -H "" {} | $SHV_PICKER | tail -1)
    else
        sel=$(_get_files | xargs -I {} grep -l -H "$1" {} | $SHV_PICKER | tail -1)
    fi
    [[ -z $sel ]] && exit 0
    file=$(_format "$sel" | cut -d':' -f1)
    ! [[ -f $file ]] && file="$file.$SHV_EXT"
    printf "%s\n" "$file"
}

# Edit note with EDITOR
# $1: Path to file to edit
# $2: Tag to insert ot the bottom of the file
edit_note() {
    [[ -n $2 ]] && ! [[ -f $1 ]] \
        && printf "\n\n%s" "$2" >>"$1"
    $EDITOR "$1"
}

# Main function
# $1: subcommands
main() {
    cd "$SHV_PATH"
    local skip_edit=false
    if [[ $# -gt 0 ]]; then
        case "$1" in
            tags)
                query=$(select_tag)
                [[ -z $query ]] && exit 0
                ;;
            diary)
                select_date "$2"
                skip_edit=true
                ;;
            *)
                echo "dio"
                skip_edit=true
                ;;
        esac
    fi

    if [[ $skip_edit != true ]]; then
        note=$(select_note "$query")
        [[ -z $note ]] && exit 0
        edit_note "$note" "$query"
    fi
}

main "$@"
